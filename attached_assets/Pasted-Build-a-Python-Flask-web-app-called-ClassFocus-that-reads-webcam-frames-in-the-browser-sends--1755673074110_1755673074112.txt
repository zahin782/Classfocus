Build a Python + Flask web app called **ClassFocus** that reads webcam frames in the browser, sends a JPEG every 1 second to `/analyze`, and shows emotion + intensity + “Attentive / Not Attentive”. When the user clicks **Stop Camera**, calculate and display the percentage of time they were attentive during that session.

**Tech + files**
- Python: `Flask`, `deepface`, `opencv-python-headless`, `numpy`
- Frontend: vanilla HTML/CSS/JS (no frameworks)
- Files:
  - `main.py` (Flask app)
  - `requirements.txt`
  - `static/index.html`, `static/style.css`, `static/app.js`

**Install**
- requirements.txt:
  flask==3.0.3
  deepface==0.0.93
  opencv-python-headless==4.10.0.84
  numpy==1.26.4

**Backend logic (`main.py`):**
- Flask app with:
  - `GET /` serves `static/index.html`
  - `POST /analyze` accepts JSON `{ image: "data:image/jpeg;base64,..." }`
    - Decode base64 to numpy array
    - Call DeepFace:
      result = DeepFace.analyze(img, actions=['emotion'], enforce_detection=False)
    - Map probabilities → intensity buckets:
      low = 0.25–0.49, medium = 0.50–0.74, high ≥ 0.75
    - Attentive rule:
      Neutral → attentive = True
      Happy/Sad → attentive = True only if intensity == "low"
      All others → attentive = False
    - Respond JSON:
      {
        "dominant": "happy",
        "intensity": "medium",
        "attentive": false,
        "probs": {...}
      }

- Run server on host=0.0.0.0, port=8080

**Frontend**
- index.html: video preview + big status text + stats panel
- app.js: 
  - Start Camera → use getUserMedia
  - Every 1s → send frame to `/analyze`, update UI
  - Track totalFrames + attentiveFrames
  - Stop Camera → stop video, show final % attentive
- UI should show things like:
  Neutral → “Neutral — Attentive”
  Happy (low) → “Happy (low) — Attentive”
  Happy (high) → “Happy (high) — Not Attentive”

**Edge cases**
- No face: dominant="none", attentive=false
- Multiple faces: just take DeepFace’s dominant
- Errors: ignore fetch fails and keep UI alive
